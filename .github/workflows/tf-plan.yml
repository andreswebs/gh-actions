---
on:
  workflow_call:
    inputs:
      runs-on:
        required: true
        type: string
      environment:
        required: true
        type: string
      working-directory:
        required: true
        type: string
      aws-region:
        required: true
        type: string
      role-to-assume:
        required: false
        type: string
        default: ""
      role-chaining:
        required: false
        type: boolean
        default: false
      tfvars:
        required: false
        type: string
        default: ""
      tfbackend:
        required: true
        type: string
      tfbackend-is-artifact:
        required: false
        type: boolean
        default: false
      tfplan:
        required: false
        type: string
        default: this.tfplan
      images-tfvars:
        required: false
        type: string
        default: ""

    outputs:
      tfplan:
        description: The filename used to save the `.tfplan` file
        value: ${{ jobs.tf-plan.outputs.tfplan }}
      init-outcome:
        description: Outcome of `terraform init`
        value: ${{ jobs.tf-plan.outputs.init-outcome }}
      validate-outcome:
        description: Outcome of `terraform validate`
        value: ${{ jobs.tf-plan.outputs.validate-outcome }}
      plan-outcome:
        description: Outcome of `terraform plan`
        value: ${{ jobs.tf-plan.outputs.plan-outcome }}

concurrency:
  group: ${{ github.repository_id }}-${{ inputs.environment }}
  cancel-in-progress: false

jobs:
  tf-plan:
    name: TF Plan - ${{ inputs.environment }}

    runs-on: ${{ inputs.runs-on }}

    defaults:
      run:
        shell: bash

    outputs:
      tfplan: ${{ steps.tf-plan.outputs.tfplan }}
      init-outcome: ${{ steps.outcomes.outputs.init-outcome }}
      validate-outcome: ${{ steps.outcomes.outputs.validate-outcome }}
      plan-outcome: ${{ steps.outcomes.outputs.plan-outcome }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup AWS
        uses: andreswebs/gh-actions/.github/actions/aws-bootstrap@main
        with:
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: ${{ inputs.role-to-assume }}
          role-chaining: ${{ inputs.role-chaining }}

      - name: Download .tfvars
        if: ${{ inputs.tfvars }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.tfvars }}
          path: ${{ inputs.working-directory }}

      - name: Download .tfvars (images)
        if: ${{ inputs.images-tfvars }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.images-tfvars }}
          path: ${{ inputs.working-directory }}

      - name: Download .tfbackend
        if: ${{ inputs.tfbackend-is-artifact }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.tfbackend }}
          path: ${{ inputs.working-directory }}

      - name: TF Bootstrap
        id: init
        uses: andreswebs/gh-actions/.github/actions/tf-bootstrap@main
        with:
          working-directory: ${{ inputs.working-directory }}
          tfbackend: ${{ inputs.tfbackend }}

      - name: Format .tfvars
        if: ${{ inputs.tfvars }}
        run: |
          terraform fmt ${{ inputs.tfvars }}

      - name: Format .tfvars (images)
        if: ${{ inputs.images-tfvars }}
        run: |
          terraform fmt ${{ inputs.images-tfvars }}

      - name: TF Validation
        id: validate
        working-directory: ${{ inputs.working-directory }}
        run: |
          terraform validate -no-color

      - name: TF Plan - ${{ inputs.tfplan }}
        id: tf-plan
        working-directory: ${{ inputs.working-directory }}
        run: |
          terraform plan -input=false -no-color -out=${{ inputs.tfplan }}
          echo "tfplan=${{ inputs.tfplan }}" >> $GITHUB_OUTPUT

      - name: Static analysis
        uses: andreswebs/gh-actions/.github/actions/tf-check@main
        with:
          working-directory: ${{ inputs.working-directory }}
          tfplan: ${{ steps.tf-plan.outputs.tfplan }}

      - name: Record outcomes
        id: outcomes
        run: |
          echo "init-outcome=${{ steps.init.outcome }}" >> $GITHUB_OUTPUT
          echo "validate-outcome=${{ steps.validate.outcome }}" >> $GITHUB_OUTPUT
          echo "plan-outcome=${{ steps.tf-plan.outcome }}" >> $GITHUB_OUTPUT

      - name: Save ${{ steps.tf-plan.outputs.tfplan }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.tf-plan.outputs.tfplan }}
          path: ${{ inputs.working-directory }}/${{ steps.tf-plan.outputs.tfplan }}
          if-no-files-found: error

      - name: Report
        uses: andreswebs/gh-actions/.github/actions/tf-report@main
        with:
          environment: ${{ inputs.environment }}
          working-directory: ${{ inputs.working-directory }}
          tfplan: ${{ steps.tf-plan.outputs.tfplan }}
          init-outcome: ${{ steps.outcomes.outputs.init-outcome }}
          validate-outcome: ${{ steps.outcomes.outputs.validate-outcome }}
          plan-outcome: ${{ steps.outcomes.outputs.plan-outcome }}
